<UserControl x:Class="Rofl.UI.Main.Controls.ReplayItemControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Rofl.UI.Main.Controls"
             xmlns:converters="clr-namespace:Rofl.UI.Main.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="350">

    <Grid Background="Transparent"
          Height="100" Width="350"
          MouseRightButtonUp="UIElement_OnMouseRightButtonUp"
          MouseEnter="Grid_MouseEnter"
          MouseLeave="Grid_MouseLeave">
        <Grid.ContextMenu>
            <ContextMenu x:Name="DockPanelReplayContextMenu"
                         Placement="Bottom">
                <MenuItem Header="{StaticResource OpenContainingFolder}" 
                          Click="OpenContainingFolder_Click"/>

                <MenuItem Header="{StaticResource ViewOnlinePage}"
                          Click="ViewOnlineMatchHistory_Click"/>

                <MenuItem Header="{StaticResource ExportReplayData}"
                          Click="ExportReplayData_OnClick"/>

                <MenuItem Header="{StaticResource RenameReplayFile}"
                          Click="RenameReplayFile_OnClick"/>

                <MenuItem Header="{StaticResource DeleteReplayFile}"
                          Click="DeleteReplayFile_OnClick"/>
            </ContextMenu>
        </Grid.ContextMenu>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="105"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="FilenameText"
                   FontSize="14"
                   FontWeight="Bold"
                   Margin="0 5 0 2"
                   Text="{Binding Path=Name, FallbackValue=Filename}"
                   ToolTip="{Binding Path=Name}"
                   Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"/>
        
        <!--Left side stats-->
        <StackPanel Orientation="Vertical"
                    Margin="0 0 5 0"
                    Grid.Column="0" Grid.Row="1">

            <TextBlock x:Name="MapNameText"
                       FontSize="12"
                       Text="{Binding Path=MapName, FallbackValue=Map name}"/>

            <TextBlock x:Name="GameLengthText"
                       FontSize="12"
                       Text="{Binding Path=GameLengthString, FallbackValue=Game duration}"
                       ToolTip="{Binding Path=GameDuration}"/>

            <TextBlock x:Name="CreationDateText"
                       FontSize="12"
                       Text="{Binding Path=CreationDate, StringFormat=yyyy-MM-dd, FallbackValue=Creation date}"
                       ToolTip="{StaticResource FileDateToolTip}"/>

            <!--Stack panel so tooltip only happens over checkmark-->
            <StackPanel x:Name="PatchTextPanel"
                        Orientation="Horizontal">

                <TextBlock x:Name="PatchNumberText"
                        FontSize="12"
                        Text="{Binding Path=GameVersion, FallbackValue=Game version}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="Red"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSupported}" Value="True">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock x:Name="PatchCheckText"
                        FontSize="12">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{StaticResource CrossText}"/>
                            <Setter Property="ToolTip" Value="{StaticResource ReplayUnsupportedToolTip}"/>
                            <Setter Property="Foreground" Value="Red"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSupported}" Value="True">
                                    <Setter Property="Text" Value="{StaticResource CheckText}"/>
                                    <Setter Property="ToolTip" Value="{StaticResource ReplaySupportedToolTip}"/>
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

            </StackPanel>

        </StackPanel>

        <!--Player icons-->
        <StackPanel Orientation="Vertical"
                    VerticalAlignment="Top"
                    Grid.Column="1" Grid.Row="1">

            <!--Select which border to set to red vs blue to show which side won-->
            <Border BorderThickness="4 0 0 0"
                    Padding="2 0 0 0">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsBlueVictorious}" Value="True">
                                <Setter Property="BorderBrush" Value="#2747e8"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsBlueVictorious}" Value="False">
                                <Setter Property="BorderBrush" Value="#cb2124"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <StackPanel Margin="2 0 0 0">
                    <ItemsControl ItemsSource="{Binding Path=BluePreviewPlayers}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:PlayerIconControl Margin="0 0 4 0"
                                                         Width="30"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl ItemsSource="{Binding Path=RedPreviewPlayers}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" Margin="0 2 0 1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:PlayerIconControl Margin="0 0 4 0"
                                                         Width="30"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    
                </StackPanel>
                
            </Border>

        </StackPanel>

        <!--Right side buttons-->
        <StackPanel x:Name="ButtonPanel"
                    Orientation="Vertical"
                    VerticalAlignment="Center"
                    Grid.Column="2" Grid.Row="0" Grid.RowSpan="2">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsHovered}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsHovered}" Value="false"/>
                                <Condition Binding="{Binding Path=IsSelected}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Grid>
                <Button x:Name="PlayButton"
                        Margin="0 0 0 5"
                        Width="37"
                        ToolTipService.ShowOnDisabled="True"
                        Click="PlayButton_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="false">
                                    <Setter Property="ToolTip" Value="{StaticResource PlayReplayToolTip}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="true">
                                    <Setter Property="ToolTip" Value="{StaticResource AlreadyPlayingToolTip}"/>
                                    <Setter Property="IsEnabled" Value="false"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsSupported}" Value="false">
                                    <Setter Property="IsEnabled" Value="false"/>
                                    <Setter Property="ToolTip" Value="{StaticResource CannotPlayToolTip}"/>
                                </DataTrigger>
                                
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsPlaying}" Value="false"/>
                                        <Condition Binding="{Binding Path=IsSupported}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource PlayDrawingImage}"
                           RenderOptions.BitmapScalingMode="HighQuality"/>
                </Button>
                <Image Source="{StaticResource CircleFillDrawingImage}"
                       Width="10"
                       Margin="0 2 2 0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Top">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="false">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>

            <Button x:Name="MoreButton"
                    Margin="0"
                    Width="37"
                    ToolTip="{StaticResource MoreToolTip}"
                    Click="MoreButton_Click">
                <Image Source="{StaticResource MoreDrawingImage}"
                       RenderOptions.BitmapScalingMode="HighQuality"/>

                <Button.ContextMenu>
                    <ContextMenu x:Name="ReplayContextMenu"
                                 Placement="Bottom">
                        <MenuItem x:Name="OpenContainingFolder"
                                  Header="{StaticResource OpenContainingFolder}" 
                                  Click="OpenContainingFolder_Click"/>

                        <MenuItem x:Name="ViewOnlineMatchHistory"
                                  Header="{StaticResource ViewOnlinePage}"
                                  Click="ViewOnlineMatchHistory_Click"/>

                        <MenuItem x:Name="ExportReplayData"
                                  Header="{StaticResource ExportReplayData}"
                                  Click="ExportReplayData_OnClick"/>

                        <MenuItem x:Name="RenameReplayFile"
                                  Header="{StaticResource RenameReplayFile}"
                                  Click="RenameReplayFile_OnClick"/>

                        <MenuItem x:Name="DeleteReplayFile"
                                  Header="{StaticResource DeleteReplayFile}"
                                  Click="DeleteReplayFile_OnClick"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            
        </StackPanel>
        
    </Grid>
    
</UserControl>
